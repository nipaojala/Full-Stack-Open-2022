{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nipao\\\\Desktop\\\\FSO\\\\01\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value,\n    sign\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [text, \" \", value, \" \", sign]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = _ref2 => {\n  let {\n    number1,\n    number2,\n    number3,\n    allClicks\n  } = _ref2;\n\n  if (allClicks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: number1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: number2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: number3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: number1 + number2 + number3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: (number1 - number3) / (number1 + number2 + number3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: (number1 + number2) / (number1 + number2 + number3) * 100,\n        sign: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [allClicks, setAll] = useState([]); // tallenna napit omaan tilaansa\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increasegood = () => {\n    setGood(good + 1);\n    setAll(allClicks.concat('G'));\n  };\n\n  const increaseneutral = () => {\n    setNeutral(neutral + 1);\n    setAll(allClicks.concat('N'));\n  };\n\n  const increasebad = () => {\n    setAll(allClicks.concat('B'));\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increasegood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increaseneutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: increasebad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      allClicks: allClicks,\n      number1: good,\n      number2: neutral,\n      number3: bad,\n      sign: \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hDmKanlgNM71gldn5GjU4+lWQac=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","props","handleClick","text","StatisticLine","value","sign","Statistics","number1","number2","number3","allClicks","length","App","setAll","good","setGood","neutral","setNeutral","bad","setBad","increasegood","concat","increaseneutral","increasebad"],"sources":["C:/Users/nipao/Desktop/FSO/01/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst StatisticLine  = ({text, value, sign}) => {\n  return (\n    <table>\n      <tr>\n        <td>{text} {value} {sign}</td>\n      </tr>\n    </table>\n  )\n}\n\nconst Statistics = ({number1, number2, number3, allClicks}) => {\n  if (allClicks.length === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  } else {\n  return (\n    <div>\n      <StatisticLine text=\"good\" value={number1}/>\n      <StatisticLine text=\"bad\" value={number2}/>\n      <StatisticLine text=\"neutral\" value={number3}/>\n      <StatisticLine text=\"all\" value={number1+number2+number3}/>\n      <StatisticLine text=\"average\" value={(number1-number3)/(number1+number2+number3)}/>\n      <StatisticLine text=\"positive\" value={(number1+number2)/(number1+number2+number3)*100} sign=\"%\"/>\n    </div>\n  )\n  }\n}\n\nconst App = () => {\n  const [allClicks, setAll] = useState([])\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const increasegood = () => {\n    setGood(good + 1)\n    setAll(allClicks.concat('G'))\n  }\n  const increaseneutral = () => {\n    setNeutral(neutral + 1)\n    setAll(allClicks.concat('N'))\n  }\n  const increasebad = () => {\n    setAll(allClicks.concat('B'))\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <Button\n        handleClick={increasegood}\n        text='good'\n        />\n      <Button\n        handleClick={increaseneutral}\n        text='neutral'\n        />\n      <Button \n        handleClick={increasebad}\n        text='bad'\n        />\n      <h1>Statistics</h1>\n      <Statistics allClicks={allClicks} number1={good} number2={neutral} number3={bad} sign=\"%\"/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}